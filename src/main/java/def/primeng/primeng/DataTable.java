package def.primeng.primeng;

import def.angular.core.*;
import def.primeng.components.dom.domhandler.DomHandler;

public class DataTable extends jsweet.lang.Object {
    public ElementRef el;
    public DomHandler domHandler;
    public Renderer renderer;
    public Object[] value;
    public Boolean paginator;
    public double rows;
    public double totalRecords;
    public double pageLinks;
    public double[] rowsPerPageOptions;
    public Boolean responsive;
    public Boolean stacked;
    public String selectionMode;
    public Object selection;
    public EventEmitter<?> selectionChange;
    public Boolean editable;
    public EventEmitter<?> onRowClick;
    public EventEmitter<?> onRowSelect;
    public EventEmitter<?> onRowUnselect;
    public EventEmitter<?> onRowDblclick;
    public EventEmitter<?> onHeaderCheckboxToggle;
    public EventEmitter<?> onContextMenuSelect;
    public double filterDelay;
    public Boolean lazy;
    public EventEmitter<?> onLazyLoad;
    public Boolean resizableColumns;
    public String columnResizeMode;
    public EventEmitter<?> onColResize;
    public Boolean reorderableColumns;
    public EventEmitter<?> onColReorder;
    public Boolean scrollable;
    public Object scrollHeight;
    public Object scrollWidth;
    public Object headerRows;
    public Object footerRows;
    public Object style;
    public String styleClass;
    public Object globalFilter;
    public String sortMode;
    public String sortField;
    public double sortOrder;
    public SortMeta[] multiSortMeta;
    public Object contextMenu;
    public String csvSeparator;
    public String emptyMessage;
    public String paginatorPosition;
    public Object[] expandedRows;
    public EventEmitter<?> onEditInit;
    public EventEmitter<?> onEditComplete;
    public EventEmitter<?> onEdit;
    public EventEmitter<?> onEditCancel;
    public EventEmitter<?> onPage;
    public EventEmitter<?> onSort;
    public EventEmitter<?> onFilter;
    public Object header;
    public Object footer;
    public Boolean expandableRows;
    public EventEmitter<?> onRowExpand;
    public EventEmitter<?> onRowCollapse;
    public TemplateRef<?> rowExpansionTemplate;
    public QueryList<Column> cols;
    public Object[] dataToRender;
    public double first;
    public double page;
    public Object filterTimeout;
    public Filters filters;
    public Object[] filteredValue;
    public Column[] columns;
    public Boolean columnsUpdated;
    public Boolean stopSortPropagation;
    public Column sortColumn;
    public Boolean percentageScrollHeight;
    public Object scrollBody;
    public Object scrollHeader;
    public Object scrollHeaderBox;
    public Object bodyScrollListener;
    public Object headerScrollListener;
    public Object resizeScrollListener;
    public Boolean columnResizing;
    public double lastPageX;
    public Object documentColumnResizeListener;
    public Object documentColumnResizeEndListener;
    public Object resizerHelper;
    public Object resizeColumn;
    public Object reorderIndicatorUp;
    public Object reorderIndicatorDown;
    public Object draggedColumn;
    public Object tbody;
    public Object differ;
    public Object globalFilterFunction;
    public Boolean preventBlurOnEdit;
    public Object columnsSubscription;
    public DataTable(ElementRef el, DomHandler domHandler, IterableDiffers differs, Renderer renderer, ChangeDetectorRef changeDetector){}
    native public void ngOnInit();
    native public void ngAfterContentInit();
    native public void ngAfterViewChecked();
    native public void ngAfterViewInit();
    native public void ngDoCheck();
    native public void initColumns();
    native public Object resolveFieldData(Object data, String field);
    native public void updatePaginator();
    native public void paginate(Object event);
    native public void updateDataToRender(Object datasource);
    native public void sort(Object event, Column column);
    native public void sortSingle();
    native public void sortMultiple();
    native public Object multisortField(Object data1, Object data2, Object multiSortMeta, Object index);
    native public void addSortMeta(Object meta);
    native public Boolean isSorted(Column column);
    native public double getSortOrder(Column column);
    native public void handleRowClick(Object event, Object rowData);
    native public void selectRowWithRadio(Object rowData);
    native public void toggleRowWithCheckbox(Object event, Object rowData);
    native public void toggleRowsWithCheckbox(Object event);
    native public void onRowRightClick(Object event, Object rowData);
    native public void rowDblclick(Object event, Object rowData);
    native public Boolean isSingleSelectionMode();
    native public Boolean isMultipleSelectionMode();
    native public double findIndexInSelection(Object rowData);
    native public Boolean isSelected(Object rowData);
    public Boolean allSelected;
    native public void onFilterKeyup(Object value, Object field, Object matchMode);
    native public void filter();
    native public Boolean hasFilter();
    native public void onFilterInputClick(Object event);
    public FilterConstraints filterConstraints;
    native public void switchCellToEditMode(Object element, Column column, Object rowData);
    native public void switchCellToViewMode(Object element, Column column, Object rowData, Boolean complete);
    native public void onCellEditorKeydown(Object event, Column column, Object rowData);
    native public Object findCell(Object element);
    native public void initResizableColumns();
    native public void initColumnResize(Object event);
    native public void onColumnResize(Object event);
    native public void onColumnResizeEnd(Object event);
    native public void fixColumnWidths();
    native public void onColumnDragStart(Object event);
    native public void onColumnDragover(Object event);
    native public void onColumnDragleave(Object event);
    native public void onColumnDrop(Object event);
    native public void initColumnReordering();
    native public Object findParentHeader(Object element);
    native public void initScrolling();
    native public double calculateScrollbarWidth();
    native public Boolean hasFooter();
    native public Boolean isEmpty();
    native public LazyLoadEvent createLazyLoadMetadata();
    native public void toggleRow(Object row);
    native public double findExpandedRowIndex(Object row);
    native public Boolean isRowExpanded(Object row);
    native public void reset();
    native public Column[] visibleColumns();
    native public void exportCSV();
    native public void ngOnDestroy();
    /** This is an automatically generated object type (see the source definition). */
    @jsweet.lang.ObjectType
    public static class Filters extends jsweet.lang.Object {
        native public FilterMetadata $get(String s);
    }
    /** This is an automatically generated object type (see the source definition). */
    @jsweet.lang.ObjectType
    public static class FilterConstraints extends jsweet.lang.Object {
        native public Boolean startsWith(Object value, Object filter);
        native public Boolean contains(Object value, Object filter);
        native public Boolean endsWith(Object value, Object filter);
    }
    protected DataTable(){}
}

